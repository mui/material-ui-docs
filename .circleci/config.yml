version: 2.1

parameters:
  browserstack-force:
    description: Whether to force browserstack usage. We have limited resources on browserstack so the pipeline might decide to skip browserstack if this parameter isn't set to true.
    type: boolean
    default: false
  react-dist-tag:
    description: The dist-tag of react to be used
    type: string
    default: stable
  workflow:
    description: The name of the workflow to run
    type: string
    default: pipeline

defaults: &defaults
  parameters:
    react-dist-tag:
      description: The dist-tag of react to be used
      type: string
      default: << pipeline.parameters.react-dist-tag >>
    test-gate:
      description: A particular type of tests that should be run
      type: string
      default: undefined
  environment:
    # Keep in sync with "Save playwright cache"
    PLAYWRIGHT_BROWSERS_PATH: /tmp/pw-browsers
    # expose it globally otherwise we have to thread it from each job to the install command
    BROWSERSTACK_FORCE: << pipeline.parameters.browserstack-force >>
    REACT_DIST_TAG: << parameters.react-dist-tag >>
    TEST_GATE: << parameters.test-gate >>
  working_directory: /tmp/material-ui
  docker:
    - image: circleci/node:12
# CircleCI has disabled the cache across forks for security reasons.
# Following their official statement, it was a quick solution, they
# are working on providing this feature back with appropriate security measures.
# https://discuss.circleci.com/t/saving-cache-stopped-working-warning-skipping-this-step-disabled-in-configuration/24423/21
#
# restore_repo: &restore_repo
#   restore_cache:
#     key: v1-repo-{{ .Branch }}-{{ .Revision }}

commands:
  install_js:
    parameters:
      browsers:
        type: boolean
        default: false
        description: 'Set to true if you intend to any browser (e.g. with playwright).'

    steps:
      - run:
          name: View install environment
          command: |
            node --version
            yarn --version
      - run:
          name: Resolve react version
          command: |
            node scripts/use-react-dist-tag
            # log a patch for maintainers who want to check out this change
            git --no-pager diff HEAD
      - restore_cache:
          name: Restore yarn cache
          keys:
            - v7-yarn-{{ checksum "yarn.lock" }}
            - v7-yarn-
      - run:
          name: Set yarn cache folder
          command: |
            # Keep path in sync with `save_cache` for key "v7-yarn-"
            yarn config set cache-folder /tmp/yarn-cache
            # Debug information
            yarn cache dir
            yarn cache list
      - when:
          condition: << parameters.browsers >>
          steps:
            - run:
                name: Prepare playwright hash
                command: yarn --json list --pattern playwright > /tmp/playwright_info.json
            - store_artifacts:
                name: Debug playwright hash
                path: /tmp/playwright_info.json
            - restore_cache:
                name: Restore playwright cache
                keys:
                  - v5-playwright-{{ arch }}-{{ checksum "/tmp/playwright_info.json" }}
                  - v5-playwright-{{ arch }}-
                  - v5-playwright-
      - run:
          name: Install js dependencies
          command: yarn install --verbose
          environment:
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: <<# parameters.browsers >>0<</ parameters.browsers >><<^ parameters.browsers >>1<</ parameters.browsers >>
      - save_cache:
          name: Save yarn cache
          key: v7-yarn-{{ checksum "yarn.lock" }}
          paths:
            # Keep path in sync with "Set yarn cache folder"
            # Can't use environment variables for `save_cache` paths (tested in https://app.circleci.com/pipelines/github/mui-org/material-ui/37813/workflows/5b1e207f-ac8b-44e7-9ba4-d0f9a01f5c55/jobs/223370)
            - /tmp/yarn-cache
      - when:
          condition: << parameters.browsers >>
          steps:
            - save_cache:
                name: Save playwright cache
                key: v5-playwright-{{ arch }}-{{ checksum "/tmp/playwright_info.json" }}
                paths:
                  # Keep path in sync with "PLAYWRIGHT_BROWSERS_PATH"
                  # Can't use environment variables for `save_cache` paths (tested in https://app.circleci.com/pipelines/github/mui-org/material-ui/37813/workflows/5b1e207f-ac8b-44e7-9ba4-d0f9a01f5c55/jobs/223370)
                  - /tmp/pw-browsers

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - when:
          # Install can be "dirty" when running with non-default versions of React
          condition:
            equal: [<< parameters.react-dist-tag >>, stable]
          steps:
            - run:
                name: Should not have any git not staged
                command: git diff --exit-code
            - run:
                name: Check for duplicated packages
                command: yarn deduplicate
  test_unit:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Tests fake browser
          command: yarn test:coverage:ci
      - run:
          name: Check coverage generated
          command: |
            if ! [[ -s coverage/lcov.info ]]
            then
              exit 1
            fi
      - run:
          name: material-ui-icons
          command: |
            # latest commit
            LATEST_COMMIT=$(git rev-parse HEAD)

            # latest commit where packages/mui-icons-material was changed
            FOLDER_COMMIT=$(git log -1 --format=format:%H --full-diff packages/mui-icons-material)

            if [ $FOLDER_COMMIT = $LATEST_COMMIT ]; then
              echo "changes, let's run the tests"
              yarn workspace @mui/icons-material build:typings
              yarn workspace @mui/icons-material test:built-typings
            else
              echo "no changes"
            fi
      - run:
          name: typescript-to-proptypes
          command: |
            # latest commit
            LATEST_COMMIT=$(git rev-parse HEAD)

            # latest commit where packages/typescript-to-proptypes was changed
            FOLDER_COMMIT=$(git log -1 --format=format:%H --full-diff packages/typescript-to-proptypes)

            if [ $FOLDER_COMMIT = $LATEST_COMMIT ]; then
              echo "changes, let's run the tests"
              yarn workspace typescript-to-proptypes test
            else
              echo "no changes"
            fi
      - run:
          name: Coverage
          command: bash <(curl -s https://codecov.io/bash) -Z -F "$REACT_DIST_TAG-jsdom"
  test_lint:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Eslint
          command: yarn lint:ci
      - run:
          name: Stylelint
          command: yarn stylelint
      - run:
          name: Lint JSON
          command: yarn jsonlint
  test_static:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: '`yarn prettier` changes committed?'
          command: yarn prettier check-changed
      - run:
          name: Generate PropTypes
          command: yarn proptypes
      - run:
          name: '`yarn proptypes` changes committed?'
          command: git diff --exit-code
      - run:
          name: Generate the documentation
          command: yarn docs:api
      - run:
          name: '`yarn docs:api` changes committed?'
          command: git diff --exit-code
      - run:
          name: Update the navigation translations
          command: yarn docs:i18n
      - run:
          name: '`yarn docs:i18n` changes committed?'
          command: git diff --exit-code
      - run:
          name: '`yarn framer:build` changes committed?'
          command: yarn workspace framer build
      - run:
          name: '`yarn workspace framer build` changes committed?'
          command: git diff --exit-code
      - run:
          name: '`yarn extract-error-codes` changes committed?'
          command: |
            yarn extract-error-codes
            git diff --exit-code
  test_types:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Transpile TypeScript demos
          command: yarn docs:typescript:formatted
      - run:
          name: '`yarn docs:typescript:formatted` changes committed?'
          command: git add -A && git diff --exit-code --staged
      - run:
          name: Tests TypeScript definitions
          command: yarn typescript:ci
      - run:
          name: Test module augmenation
          command: |
            yarn workspace @mui/material typescript:module-augmentation
            yarn workspace @mui/core typescript:module-augmentation

      - restore_cache:
          name: Restore generated declaration files
          keys:
            # #default-branch-switch
            # We assume that the target branch is `master` and that declaration files are persisted in commit order.
            # "If there are multiple matches, the most recently generated cache will be used."
            - typescript-declaration-files-master

      - run:
          name: Diff declaration files
          command: |
            git add -f packages/mui-material/build || echo '/material declarations do not exist'
            git add -f packages/mui-lab/build || echo '/lab declarations do not exist'
            git add -f packages/mui-utils/build || echo '/utils declarations do not exist'
            yarn lerna run --parallel build:types
            git --no-pager diff

      - run:
          name: Any defect declaration files?
          command: node scripts/testBuiltTypes.js
      - save_cache:
          name: Save generated declaration files
          key: typescript-declaration-files-{{ .Branch }}-{{ .Revision }}
          paths:
            # packages with generated declaration files
            - packages/mui-material/build
            - packages/mui-lab/build
            - packages/mui-utils/build
  test_types_next:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Resolve typescript version
          environment:
            TYPESCRIPT_DIST_TAG: next
          command: |
            node scripts/use-typescript-dist-tag
            # log a patch for maintainers who want to check out this change
            git --no-pager diff HEAD
      - install_js
      - run:
          name: Tests TypeScript definitions
          command: |
            # ignore build failures
            # it's expected that typescript@next fails since the lines of the errors
            # change frequently. This build is monitored regardless of its status
            set +e
            yarn typescript:ci
            exit 0

      - restore_cache:
          name: Restore generated declaration files
          keys:
            # We assume that the target branch is `next` and that declaration files are persisted in commit order.
            # "If there are multiple matches, the most recently generated cache will be used."
            - typescript-declaration-files-next

      - run:
          name: Diff declaration files
          command: |
            git add -f packages/mui-material/build || echo '/core declarations do not exist'
            git add -f packages/mui-lab/build || echo '/lab declarations do not exist'
            git add -f packages/mui-utils/build || echo '/utils declarations do not exist'
            yarn lerna run --parallel build:types
            git --no-pager diff

      - run:
          name: Log defect declaration files
          command: |
            # ignore build failures
            # Fixing these takes some effort that isn't viable to merge in a single PR.
            # We'll simply monitor them for now.
            set +e
            node scripts/testBuiltTypes.js
            exit 0
  test_browser:
    <<: *defaults
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: Tests real browsers
          command: yarn test:karma
      - run:
          name: Check coverage generated
          command: |
            if ! [[ -s coverage/lcov.info ]]
            then
              exit 1
            fi
      - run:
          name: Coverage
          command: bash <(curl -s https://codecov.io/bash) -Z -F "$REACT_DIST_TAG-browser"
      - store_artifacts:
          # hardcoded in karma-webpack
          path: /tmp/_karma_webpack_
          destination: artifact-file
  test_e2e:
    <<: *defaults
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: yarn test:e2e
          command: yarn test:e2e
      - run:
          name: Can we generate the @mui/material umd build?
          command: yarn workspace @mui/material build:umd
      - run:
          name: Test umd release
          command: yarn test:umd
  test_profile:
    <<: *defaults
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: Tests real browsers
          # Run a couple of times for a better sample.
          # TODO: hack something together where we can compile once and run multiple times e.g. by abusing watchmode.
          command: |
            # Running on chrome only since actual times are innaccurate anyway
            # The other reason is that browserstack allows little concurrency so it's likely that we're starving other runs.
            yarn test:karma:profile --browsers chrome,chromeHeadless
            yarn test:karma:profile --browsers chrome,chromeHeadless
            yarn test:karma:profile --browsers chrome,chromeHeadless
            yarn test:karma:profile --browsers chrome,chromeHeadless
            yarn test:karma:profile --browsers chrome,chromeHeadless
      # Persist reports for inspection in https://mui-dashboard.netlify.app/
      - store_artifacts:
          # see karma.conf.profile.js reactProfilerReporter.outputDir
          path: tmp/react-profiler-report/karma
          destination: react-profiler-report/karma
  test_regressions:
    <<: *defaults
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout
      - install_js:
          browsers: true
      - run:
          name: Run visual regression tests
          command: xvfb-run yarn test:regressions
      - run:
          name: Upload screenshots to Argos CI
          command: yarn test:argos
  test_bundling_prepare:
    <<: *defaults
    steps:
      - checkout
      - install_js
      - run:
          name: Build packages for fixtures
          command: yarn lerna run --scope "@mui/*" build
      - persist_to_workspace:
          root: packages
          paths:
            - '*/build'

  test_bundling_node-esm:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/node-esm/
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture node-esm
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: |
            # TODO: Known failure
            set +e
            yarn start
            exit 0
  test_bundling_next-webpack4:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/next-webpack4/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture next-webpack4
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: yarn start
  test_bundling_next-webpack5:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/next-webpack5/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture next-webpack5
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: yarn start
  test_bundling_create-react-app:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/create-react-app/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture create-react-app
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: yarn start
  test_bundling_snowpack:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/snowpack/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture snowpack
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: yarn start
  test_bundling_vite:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/vite/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture vite
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: yarn start
  test_bundling_esbuild:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/esbuild/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/createFixture esbuild
      - run:
          name: Install dependencies
          command: |
            yarn
            node ../../scripts/useBuildFromSource.js .
      - run:
          name: Test fixture
          command: |
            # TODO: Known failure
            set +e
            yarn start
            exit 0
  test_bundling_gatsby:
    <<: *defaults
    working_directory: /tmp/material-ui/test/bundling/fixtures/gatsby/
    docker:
      - image: mcr.microsoft.com/playwright@sha256:310e3ca5bb884f4b9a4a8452dbabda4a35ac62a0d6f46eee953558e8d7d4cfb0
        environment:
          NODE_ENV: development # Needed if playwright is in `devDependencies`
    steps:
      - checkout:
          path: /tmp/material-ui
      - attach_workspace:
          at: /tmp/material-ui/packages
      - run:
          name: Prepare fixture
          command: |
            node ../../scripts/useBuildFromSource.js .
            node ../../scripts/createFixture gatsby
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Test fixture
          command: yarn start
workflows:
  version: 2
  pipeline:
    when:
      equal: [pipeline, << pipeline.parameters.workflow >>]
    jobs:
      - checkout
      - test_unit:
          requires:
            - checkout
      - test_lint:
          requires:
            - checkout
      - test_static:
          requires:
            - checkout
      - test_types:
          requires:
            - checkout
      - test_browser:
          requires:
            - checkout
      - test_regressions:
          requires:
            - checkout
      - test_e2e:
          requires:
            - checkout
  bundling:
    when:
      equal: [bundling, << pipeline.parameters.workflow >>]
    jobs:
      - test_bundling_prepare
      - test_bundling_node-esm:
          requires:
            - test_bundling_prepare
      - test_bundling_next-webpack4:
          requires:
            - test_bundling_prepare
      - test_bundling_next-webpack5:
          requires:
            - test_bundling_prepare
      - test_bundling_create-react-app:
          requires:
            - test_bundling_prepare
      - test_bundling_snowpack:
          requires:
            - test_bundling_prepare
      - test_bundling_vite:
          requires:
            - test_bundling_prepare
      - test_bundling_esbuild:
          requires:
            - test_bundling_prepare
      - test_bundling_gatsby:
          requires:
            - test_bundling_prepare
  profile:
    when:
      equal: [profile, << pipeline.parameters.workflow >>]
    jobs:
      - test_profile
  react-next:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
                - next
    jobs:
      - test_unit:
          react-dist-tag: next
      - test_browser:
          react-dist-tag: next
      - test_regressions:
          react-dist-tag: next
      - test_e2e:
          react-dist-tag: next
  typescript-next:
    triggers:
      - schedule:
          cron: '0 0 * * *'
          filters:
            branches:
              only:
                - master
                - next
    jobs:
      - test_types_next
